{
  "openapi": "3.0.3",
  "info": {
    "title": "Swagger Pokemon Cards API - OpenAPI 3.0",
    "description": "This is a sample Pokemon Cards API",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "pedro.jose.bidoggia@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "http://localhost:8000/api"
    }
  ],
  "tags": [
    {
      "name": "pokemon cards",
      "description": "Everything about your pokemon cards",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    }
  ],
  "paths": {
    "/card/{cardId}": {
      "put": {
        "tags": [
          "pokemon"
        ],
        "summary": "Update an existing pokemon card",
        "description": "Update an existing pokemon card by Id",
        "operationId": "update",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "ID of pokemon card to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Update an existent pokemon card",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pokemon"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pokemon"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pokemon card not found"
          },
          "405": {
            "description": "Validation exception"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "auth": [
              "write:pokemons",
              "read:pokemons"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "pokemon"
        ],
        "summary": "Soft delete",
        "description": "",
        "operationId": "delete",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "ID of card to delete",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "additionalMetadata",
            "in": "query",
            "description": "Additional Metadata",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "auth": [
              "write:pokemons",
              "read:pokemons"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "pokemon"
        ],
        "summary": "Find pokemon card by ID",
        "description": "Returns a single pokemon card",
        "operationId": "getCardById",
        "parameters": [
          {
            "name": "cardId",
            "in": "path",
            "description": "ID of pokemon card to return",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pokemon"
                }
              }
            }
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pokemon card not found"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "auth": [
              "write:pokemons",
              "read:pokemons"
            ]
          }
        ]
      }
    },
    "/card": {
      "post": {
        "tags": [
          "pokemon"
        ],
        "summary": "Add a new pokemon card",
        "description": "Add a new pokemon card",
        "operationId": "add",
        "requestBody": {
          "description": "Create a new pokemon card",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Pokemon"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Pokemon"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "auth": [
              "write:pokemons",
              "read:pokemons"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "pokemon"
        ],
        "summary": "Finds pokemon cards",
        "description": "Find filtered and paginated cards",
        "operationId": "GetCardsFiltered",
        "parameters": [
          {
            "name": "Filters",
            "in": "query",
            "description": "name=xxx",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Page",
            "in": "query",
            "description": "page=x",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "PageSize",
            "in": "query",
            "description": "pageSize=x",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Pokemon"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "auth": [
              "write:pokemons",
              "read:pokemons"
            ]
          }
        ]
      }
    },
    "/register": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Register user",
        "description": "This can only be done using name, email and password.",
        "operationId": "register",
        "requestBody": {
          "description": "User jwt token registered",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "default": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logs user and generates a jwt token",
        "description": "",
        "operationId": "loginUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "headers": {
              "X-Rate-Limit": {
                "description": "calls per hour allowed by the user",
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "X-Expires-After": {
                "description": "date in UTC when token expires",
                "schema": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username/password supplied"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Logout",
        "description": "Logout so token is no longer valide",
        "operationId": "logout",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/refresh": {
      "post": {
        "tags": [
          "auth"
        ],
        "summary": "Get user token",
        "description": "",
        "operationId": "refresh",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          }
        },
        "security": [
          {
            "api_key": []
          },
          {
            "auth": [
              "write:pokemons",
              "read:pokemons"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "example": "theUser"
          },
          "email": {
            "type": "string",
            "example": "john@email.com"
          },
          "password": {
            "type": "string",
            "example": "12345"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "Pokemon": {
        "required": [
          "name",
          "photoUrls"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "pokemon_1"
          },
          "hp": {
            "type": "integer",
            "description": "card pokemon hp must be multiple of 10",
            "format": "int64",
            "example": 10
          },
          "first_edition": {
            "type": "boolean",
            "example": true
          },
          "expansion": {
            "type": "string",
            "description": "card pokemon expansion",
            "enum": [
              "base set",
              "jungle",
              "fossil",
              "base set 2"
            ]
          },
          "kind": {
            "type": "string",
            "description": "card pokemon kind",
            "enum": [
              "water",
              "fire",
              "wind",
              "grass",
              "electricity"
            ]
          },
          "rarity": {
            "type": "string",
            "description": "how rare the pokemon is",
            "enum": [
              "rare",
              "common",
              "not common"
            ]
          },
          "price": {
            "type": "decimal",
            "example": 12.5
          },
          "image": {
            "type": "string",
            "description": "card pokemon image path",
            "example": "folder/file.extension"
          }
        }
      },
      "ApiResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          },
          "data": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      }
    },
    "requestBodies": {
      "Pokemon": {
        "description": "Card object",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Pokemon"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "auth": {
        "type": "apiKey",
        "flows": {
          "implicit": {
            "authorizationUrl": "https://localhost:8000",
            "scopes": {
              "write:pokemons": "modify pokemons in your account",
              "read:pokemons": "read your pokemons"
            }
          }
        }
      },
      "api_key": {
        "type": "apiKey",
        "name": "api_key",
        "in": "header"
      }
    }
  }
}